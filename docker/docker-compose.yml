version: '3.8'
services:
  # Maildev server for testing mailing functionality
#  maildev:
#    container_name: mail_dev
#    image: maildev/maildev
#    ports:
#      - '1080:1080'

  # SonarQube server
  sonar:
    container_name: sonarQube
    image: sonarqube:8.9-community
    depends_on:
      - db
    environment:
      SONARQUBE_JDBC_URL: jdbc:postgresql://db:5432/postgres
      SONARQUBE_JDBC_USERNAME: postgres
      SONARQUBE_JDBC_PASSWORD: postgres
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'true'
    ports:
      - '9000:9000'

  # Postgres database for application data
  db:
    image: postgres:14.1-alpine
    restart: always
    ports:
      - '5432:5432'
    hostname: postgres
    container_name: shopper-postgresDB
    environment:
      POSTGRES_DB: shopper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
#    volumes:
#      - shopperData:/var/lib/postgresql/data
#volumes:
#  shopperData:
#    external: true


#version: "3"
#
#services:
#  sonarqube:
#    image: sonarqube:8.9-community
#    expose:
#      - 9000
#    ports:
#      - "127.0.0.1:9000:9000"
#    networks:
#      - sonarnet
#    environment:
#      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
#      - SONARQUBE_JDBC_USERNAME=sonar
#      - SONARQUBE_JDBC_PASSWORD=sonar
#    volumes:
#      - sonarqube_conf:/opt/sonarqube/conf
#      - sonarqube_data:/opt/sonarqube/data
#      - sonarqube_extensions:/opt/sonarqube/extensions
#      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
#
#  db:
#    image: postgres:14.1-alpine
#    networks:
#      - sonarnet
#    environment:
#      - POSTGRES_USER=sonar
#      - POSTGRES_PASSWORD=sonar
#    volumes:
#      - postgresql:/var/lib/postgresql
#      - postgresql_data:/var/lib/postgresql/data
#
#networks:
#  sonarnet:
#
#volumes:
#  sonarqube_conf:
#  sonarqube_data:
#  sonarqube_extensions:
#  sonarqube_bundled-plugins:
#  postgresql:
#  postgresql_data: